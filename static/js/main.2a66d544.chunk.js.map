{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","components/Title/Title.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","Title","title","defaultProps","Fiter","value","onChange","className","styles","title_filter","input_filter","type","shortid","require","ContactForm","state","id","name","number","handleChange","e","currentTarget","console","log","setState","handleSubmit","preventDefault","props","onSubmit","reset","nameInputId","generate","numberInputId","form","this","form_label","htmlFor","label_name","form_input","pattern","required","add_contact_btn","Component","ContactItem","onDelete","delete_contact_btn","onClick","ContactsList","contacts","map","App","filter","addContact","isEqualName","alert","contact","data","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","find","handleDelete","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","visibleContact","Filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a66d544.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_contact_btn\":\"ContactsList_delete_contact_btn__264_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"form_input\":\"ContactForm_form_input__3foex\",\"label_name\":\"ContactForm_label_name__2Olwv\",\"add_contact_btn\":\"ContactForm_add_contact_btn__3uqxT\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Title = ({ title }) => <h2>{title}</h2>;\n\nTitle.defaultProps = {\n  title: \"Phonebook\",\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Title;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Filter.module.css\";\n\nconst Fiter = ({ value, onChange }) => (\n  <label>\n    <span className={styles.title_filter}>Find contacts by name</span>\n    <input\n      className={styles.input_filter}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFiter.defaultProps = {\n  value: \"\",\n  onChange: () => {},\n};\n\nFiter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Fiter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./ContactForm.module.css\";\n\nconst shortid = require(\"shortid\");\n\nclass ContactForm extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    // console.log(\"Form ~ e: \", e);\n    // console.log(\"Form ~ e: \", e.currentTarget);\n    const { name, value, id } = e.currentTarget;\n\n    console.log(\"Form ~ ID: \", id);\n\n    this.setState({ [name]: value, id: id });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ id: \"\", name: \"\", number: \"\" });\n  };\n\n  render() {\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.form_label} htmlFor={nameInputId}>\n          <span className={styles.label_name}>Name</span>\n          <input\n            className={styles.form_input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={nameInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={styles.form_label} htmlFor={numberInputId}>\n          <span className={styles.label_name}>Number</span>\n          <input\n            className={styles.form_input}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={numberInputId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={styles.add_contact_btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <tr key={id}>\n    <td>{name}</td>\n    <td>{number}</td>\n    <td>\n      <button\n        className={styles.delete_contact_btn}\n        value={id}\n        onClick={onDelete}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nContactItem.defaultProps = {\n  onDelete: () => {},\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onDelete: PropTypes.func,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ContactItem from \"./ContactItem\";\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  console.log(\"ContactsList ~ contacts: \", contacts);\n\n  return (\n    <div>\n      <h3>Contacts</h3>\n      <table>\n        <thead>\n          <tr>\n            <td>Name</td>\n            <td>Phone</td>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem\n              id={id}\n              name={name}\n              number={number}\n              onDelete={onDelete}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nContactsList.defaultProps = {\n  onDelete: () => {},\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    onDelete: PropTypes.func,\n  }),\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\n\nimport Title from \"./components/Title\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactsList\";\n\nimport contacts from \"./data/contacts.json\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    console.log(\"App componentDidMount\");\n\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"App componentDidUpdate\");\n\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = (id, name, number) => {\n    if (!this.isEqualName(name)) {\n      const contact = { id, name, number };\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  onSubmit = (data) => {\n    const { id, name, number } = data;\n\n    console.log(\"App ~ ID: \", id);\n    console.log(\"App ~ name: \", name);\n\n    this.addContact(id, name, number);\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  isEqualName = (name) => {\n    console.log(\"EQUAL: \", name);\n    return this.state.contacts.find((contact) => contact.name === name);\n  };\n\n  handleDelete = (e) => {\n    const contactId = e.currentTarget.value;\n\n    console.log(\"DELETE: \", contactId);\n\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContact = this.getVisibleContacts();\n\n    return (\n      <div className=\"container\">\n        <Title title=\"Phonebook\" />\n        <ContactForm onSubmit={this.onSubmit} />\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList contacts={visibleContact} onDelete={this.handleDelete} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title_filter\":\"Filter_title_filter__HU21B\",\"input_filter\":\"Filter_input_filter__cpY52\"};"],"sourceRoot":""}